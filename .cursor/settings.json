{
  "files.associations": {
    ".cursor/rules/agents/**/*.json": "json",
    ".cursor/rules/agents/**/*.mdc": "markdown",
    ".cursor/rules/agents/**/*.md": "markdown",
    ".cursor/rules/agents/**/*.txt": "plaintext",
    ".cursor/rules/agents/**/*.log": "log",
    ".cursor/rules/agents/**/*.yaml": "yaml",
    ".cursor/rules/agents/**/*.yml": "yaml",
    ".cursor/rules/agents/**/*.toml": "toml",
    ".cursor/rules/agents/**/*.config": "json",
    ".cursor/rules/agents/**/*.rules": "markdown",
    ".cursor/rules/agents/**/*.prompt": "markdown",
    ".cursor/rules/agents/**/*.template": "markdown",
    ".cursor/rules/agents/**/*.spec": "json",
    ".cursor/rules/agents/**/*.schema": "json",
    ".cursor/rules/agents/**/*.analysis": "json",
    ".cursor/rules/agents/**/*.memory": "json",
    ".cursor/rules/agents/**/*.intelligence": "json",
    ".cursor/rules/agents/**/*.context": "json",
    ".cursor/rules/agents/**/*.workflow": "json",
    ".cursor/rules/agents/_store/**/*.json": "json",
    ".cursor/rules/agents/_store/**/*.mdc": "markdown",
    ".cursor/rules/agents/_core/**/*.mdc": "markdown",
    ".cursor/rules/agents/_core/**/*.json": "json"
  },
  "files.watcherExclude": {
    "**/.cursor/rules/agents/_store/memory/**": false,
    "**/.cursor/rules/agents/_store/analysis/**": false,
    "**/.cursor/rules/agents/_store/projects/**": false,
    "**/.cursor/rules/agents/_store/logs/**": false,
    "**/.cursor/rules/agents/_store/intelligence/**": false,
    "**/.cursor/rules/agents/_store/cursor-summaries/**": false,
    "**/.cursor/rules/agents/_core/**": false,
    "**/.cursor/rules/agents/workflows/**": false,
    "**/.cursor/rules/agents/prompts/**": false,
    "**/.cursor/rules/agents/tools/**": false,
    "**/.cursor/rules/agents/config/**": false,
    "**/.cursor/rules/agents/_store/cache/**": true,
    "**/.cursor/rules/agents/_store/temp/**": true,
    "**/.cursor/rules/agents/_store/cursor-cache/**": true,
    "**/node_modules/**": true,
    "**/.git/**": true,
    "**/dist/**": true,
    "**/build/**": true
  },
  "search.include": {
    ".cursor/rules/agents/_store/memory": true,
    ".cursor/rules/agents/_store/analysis": true,
    ".cursor/rules/agents/_store/projects": true,
    ".cursor/rules/agents/_store/logs": true,
    ".cursor/rules/agents/_store/intelligence": true,
    ".cursor/rules/agents/_store/cursor-summaries": true,
    ".cursor/rules/agents/_core": true,
    ".cursor/rules/agents/workflows": true,
    ".cursor/rules/agents/prompts": true,
    ".cursor/rules/agents/tools": true,
    ".cursor/rules/agents/config": true
  },
  "search.exclude": {
    "**/.cursor/rules/agents/_store/cache/**": true,
    "**/.cursor/rules/agents/_store/temp/**": true,
    "**/.cursor/rules/agents/_store/cursor-cache/**": true,
    "**/node_modules/**": true,
    "**/.git/**": true,
    "**/dist/**": true,
    "**/build/**": true,
    "**/*.min.js": true,
    "**/*.min.css": true,
    "**/*.backup": true,
    "**/*.backup.*": true,
    "**/*.bak": true,
    "**/*.old": true,
    "**/*.orig": true,
    "**/*.tmp": true,
    "**/*.temp": true,
    "**/backup/**": true,
    "**/backups/**": true,
    "**/.cursor/settings.backup.json": true,
    "**/.cursor/settings.enhanced.backup.json": true,
    "**/.cursor/*.backup.*": true,
    "**/.cursor/rules/agents/_store/backups/**": true,
    "**/.cursor/rules/agents/_store/memory/backup/**": true,
    "**/.cursor/rules/agents/_store/analysis/backup/**": true
  },
  "editor.quickSuggestions": {
    "other": true,
    "comments": true,
    "strings": true
  },
  "editor.suggest.showWords": true,
  "editor.suggest.localityBonus": true,
  "editor.wordBasedSuggestions": "allDocuments",
  "editor.wordBasedSuggestionsMode": "allDocuments",
  "editor.suggest.snippetsPreventQuickSuggestions": false,
  "editor.tabCompletion": "on",
  "editor.parameterHints.enabled": true,
  "json.schemas": [
    {
      "fileMatch": [
        ".cursor/rules/agents/**/*.json",
        ".cursor/rules/agents/**/*.analysis",
        ".cursor/rules/agents/**/*.memory"
      ],
      "schema": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "source": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "content": {
            "type": [
              "string",
              "object"
            ]
          },
          "metadata": {
            "type": "object"
          },
          "analysis": {
            "type": "object"
          },
          "improvements": {
            "type": "array"
          },
          "agentInsights": {
            "type": "object"
          },
          "memoryClass": {
            "enum": [
              "agent",
              "project"
            ]
          },
          "projectName": {
            "type": "string"
          },
          "embedding": {
            "type": "array"
          },
          "id": {
            "type": "string"
          }
        }
      }
    },
    {
      "fileMatch": [
        ".cursor/rules/agents/_store/projects/_core/**/*.json"
      ],
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "rules": {
            "type": "array"
          },
          "conventions": {
            "type": "object"
          },
          "templates": {
            "type": "object"
          }
        }
      }
    },
    {
      "fileMatch": [
        ".cursor/rules/agents/_store/cursor-summaries/ai-session-memory.json"
      ],
      "schema": {
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "aiInteractions": {
            "type": "array"
          },
          "learnedPatterns": {
            "type": "array"
          },
          "contextHistory": {
            "type": "array"
          },
          "decisionHistory": {
            "type": "array"
          }
        }
      }
    },
    {
      "fileMatch": [
        ".cursor/rules/agents/_store/cursor-summaries/shared-ai-context.json"
      ],
      "schema": {
        "type": "object",
        "properties": {
          "sharedContext": {
            "type": "object"
          },
          "crossAIInsights": {
            "type": "array"
          },
          "collaborativeDecisions": {
            "type": "array"
          },
          "consensusPatterns": {
            "type": "array"
          }
        }
      }
    },
    {
      "fileMatch": [
        ".cursor/rules/agents/_store/intelligence/cursor-learning.json"
      ],
      "schema": {
        "type": "object",
        "properties": {
          "learnedPatterns": {
            "type": "array"
          },
          "codeStyles": {
            "type": "object"
          },
          "userPreferences": {
            "type": "object"
          },
          "projectConventions": {
            "type": "object"
          }
        }
      }
    }
  ],
  "markdown.suggest.paths.enabled": true,
  "markdown.validate.enabled": true,
  "markdown.preview.breaks": true,
  "markdown.preview.linkify": true,
  "markdown.preview.typographer": true,
  "markdown.extension.toc.levels": "1..6",
  "json.suggest.mode": "allDocuments",
  "json.validate.enable": true,
  "json.format.enable": true,
  "json.maxItemsComputed": 10000,
  "files.autoSave": "onFocusChange",
  "files.trimTrailingWhitespace": true,
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  "files.exclude": {
    "**/.cursor/rules/agents/_store/cache/**": true,
    "**/.cursor/rules/agents/_store/temp/**": true,
    "**/*.backup": true,
    "**/*.backup.*": true,
    "**/*.bak": true,
    "**/*.old": true,
    "**/*.orig": true,
    "**/*.tmp": true,
    "**/*.temp": true,
    "**/backup/**": true,
    "**/backups/**": true,
    "**/.cursor/settings.backup.json": true,
    "**/.cursor/settings.enhanced.backup.json": true,
    "**/.cursor/*.backup.*": true,
    "**/.cursor/rules/agents/_store/backups/**": true,
    "**/.cursor/rules/agents/_store/memory/backup/**": true,
    "**/.cursor/rules/agents/_store/analysis/backup/**": true
  },
  "workbench.editor.enablePreview": false,
  "workbench.editor.enablePreviewFromQuickOpen": false,
  "workbench.editor.closeOnFileDelete": true,
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editor.labelFormat": "short",
  "workbench.editor.tabCloseButton": "right",
  "workbench.editor.tabSizing": "shrink",
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "*.mdc": "${capture}.md, ${capture}.json, ${capture}.yaml, ${capture}.yml",
    "*.config.json": "${capture}.schema.json, ${capture}.template.json",
    "*.rules.mdc": "${capture}.examples.md, ${capture}.tests.json",
    "*.memory.json": "${capture}.analysis.json, ${capture}.context.json",
    "*.intelligence.json": "${capture}.patterns.json, ${capture}.insights.json",
    "package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml, .npmrc, .yarnrc, .nvmrc",
    "tsconfig.json": "tsconfig.*.json, jsconfig.json",
    "tailwind.config.js": "tailwind.config.ts, postcss.config.js, postcss.config.ts"
  },
  "breadcrumbs.enabled": true,
  "breadcrumbs.filePath": "on",
  "breadcrumbs.symbolPath": "on",
  "outline.showFiles": true,
  "outline.showModules": true,
  "outline.showPackages": true,
  "outline.showClasses": true,
  "outline.showMethods": true,
  "outline.showProperties": true,
  "outline.showFields": true,
  "outline.showConstructors": true,
  "outline.showEnums": true,
  "outline.showInterfaces": true,
  "outline.showFunctions": true,
  "outline.showVariables": true,
  "outline.showConstants": true,
  "outline.showStrings": true,
  "outline.showNumbers": true,
  "outline.showBooleans": true,
  "outline.showArrays": true,
  "outline.showObjects": true,
  "outline.showKeys": true,
  "outline.showNull": true,
  "outline.showEnumMembers": true,
  "outline.showEvents": true,
  "outline.showOperators": true,
  "outline.showTypeParameters": true,
  "git.ignoreLimitWarning": true,
  "git.autofetch": true,
  "git.enableSmartCommit": true,
  "git.confirmSync": false,
  "git.decorations.enabled": true,
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.defaultProfile.linux": "bash",
  "terminal.integrated.defaultProfile.windows": "PowerShell",
  "terminal.integrated.cwd": "${workspaceFolder}",
  "terminal.integrated.fontSize": 14,
  "typescript.suggest.autoImports": true,
  "typescript.suggest.includeCompletionsForModuleExports": true,
  "typescript.preferences.includePackageJsonAutoImports": "auto",
  "javascript.suggest.autoImports": true,
  "javascript.suggest.includeCompletionsForModuleExports": true,
  "emmet.includeLanguages": {
    "markdown": "html",
    "mdc": "html",
    "plaintext": "html"
  },
  "emmet.showExpandedAbbreviation": "always",
  "cursor.ai.enableCodeActions": true,
  "cursor.ai.enableInlineCompletions": true,
  "cursor.ai.enableChatInEditor": true,
  "cursor.ai.enableSmartRename": true,
  "cursor.ai.enableAutoComplete": true,
  "cursor.ai.contextFiles": [
    ".cursor/rules/agents/_core/**/*.mdc",
    ".cursor/rules/agents/_core/**/*.json",
    ".cursor/rules/agents/_store/projects/_core/**/*.mdc",
    ".cursor/rules/agents/_store/projects/_core/**/*.json",
    ".cursor/rules/agents/_store/memory/**/*.json",
    ".cursor/rules/agents/_store/analysis/**/*.json",
    ".cursor/rules/agents/_store/intelligence/**/*.json",
    ".cursor/rules/agents/workflows/**/*.json",
    ".cursor/rules/agents/prompts/**/*.md",
    ".cursor/rules/agents/config/**/*.json",
    ".cursor/rules/agents/_store/cursor-summaries/**/*.json",
    ".cursor/settings.json",
    ".cursor/rules/agents/_store/docs/CURSOR-*.md",
    ".cursor/rules/agents/_store/scripts/enhanced-cursor-setup.js",
    ".cursor/rules/agents/_store/scripts/protect-enhanced-cursor-settings.js",
    "README.md",
    "package.json",
    "tsconfig.json",
    "tailwind.config.js"
  ],
  "cursor.ai.priorityFiles": [
    ".cursor/rules/agents/_core/rules/**/*.mdc",
    ".cursor/rules/agents/_store/projects/_core/rules/**/*.mdc",
    ".cursor/settings.json",
    ".cursor/rules/agents/_store/cursor-summaries/workspace-context.json",
    ".cursor/rules/agents/_store/cursor-summaries/latest-insights.json",
    ".cursor/rules/agents/_store/cursor-summaries/ai-session-memory.json",
    ".cursor/rules/agents/_store/cursor-summaries/shared-ai-context.json",
    ".cursor/rules/agents/workflows/core.json",
    ".cursor/rules/agents/config/main.json"
  ],
  "workbench.colorCustomizations": {
    "editorBracketHighlight.foreground1": "#FFD700",
    "editorBracketHighlight.foreground2": "#DA70D6",
    "editorBracketHighlight.foreground3": "#87CEEB",
    "editorBracketHighlight.foreground4": "#FFA500",
    "editorBracketHighlight.foreground5": "#98FB98",
    "editorBracketHighlight.foreground6": "#F0E68C",
    "editorBracketHighlight.unexpectedBracket.foreground": "#FF0000",
    "statusBar.background": "#1e1e1e",
    "statusBar.foreground": "#ffffff",
    "activityBar.background": "#2d2d30",
    "sideBar.background": "#252526"
  },
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": "active",
  "editor.guides.bracketPairsHorizontal": "active",
  "editor.guides.highlightActiveIndentation": true,
  "editor.guides.indentation": true,
  "editor.renderWhitespace": "boundary",
  "editor.rulers": [
    80,
    100,
    120
  ],
  "editor.minimap.enabled": true,
  "editor.minimap.showSlider": "always",
  "editor.minimap.renderCharacters": false,
  "editor.stickyScroll.enabled": true,
  "editor.stickyScroll.maxLineCount": 5,
  "problems.showCurrentInStatus": true,
  "problems.sortOrder": "severity",
  "extensions.ignoreRecommendations": false,
  "extensions.showRecommendationsOnlyOnDemand": false,
  "security.workspace.trust.untrustedFiles": "open",
  "diffEditor.ignoreTrimWhitespace": false,
  "diffEditor.renderSideBySide": true,
  "diffEditor.wordWrap": "on",
  "scm.defaultViewMode": "tree",
  "scm.diffDecorations": "all",
  "scm.diffDecorationsGutterVisibility": "always",
  "aai.memoryTracking.enabled": true,
  "aai.intelligenceMode": "enhanced",
  "aai.autoSync.enabled": true,
  "aai.contextAwareness.level": "high",
  "cursor.ai.sessionMemory": {
    "enabled": true,
    "persistAcrossSessions": true,
    "memoryPath": ".cursor/rules/agents/_store/cursor-summaries/ai-session-memory.json",
    "maxMemoryEntries": 1000,
    "contextRetention": "7d"
  },
  "cursor.ai.crossAISharing": {
    "enabled": true,
    "sharedContextPath": ".cursor/rules/agents/_store/cursor-summaries/shared-ai-context.json",
    "includeDecisionHistory": true,
    "includePatternLearning": true,
    "syncInterval": "5m"
  },
  "cursor.ai.learningMode": {
    "enabled": true,
    "patternRecognition": true,
    "codeStyleLearning": true,
    "projectConventionLearning": true,
    "userPreferenceLearning": true,
    "learningDataPath": ".cursor/rules/agents/_store/intelligence/cursor-learning.json"
  },
  "cursor.ai.adaptiveContext": {
    "enabled": true,
    "dynamicContextAdjustment": true,
    "relevanceScoring": true,
    "contextOptimization": "auto",
    "maxContextTokens": 50000
  },
  "cursor.ai.fileTypeIntelligence": {
    "*.mdc": {
      "treatAs": "enhanced-markdown",
      "includeMetadata": true,
      "contextWeight": "high",
      "suggestionsMode": "comprehensive"
    },
    "*.memory.json": {
      "treatAs": "aai-memory",
      "includeEmbeddings": false,
      "contextWeight": "medium",
      "suggestionsMode": "structured"
    },
    "*.analysis.json": {
      "treatAs": "aai-analysis",
      "includeInsights": true,
      "contextWeight": "high",
      "suggestionsMode": "analytical"
    },
    "*.intelligence.json": {
      "treatAs": "aai-intelligence",
      "includePatterns": true,
      "contextWeight": "very-high",
      "suggestionsMode": "intelligent"
    }
  },
  "cursor.ai.realTimeSync": {
    "enabled": true,
    "syncWithAAIAgent": true,
    "syncPath": ".cursor/rules/agents/_store/cursor-summaries/realtime-sync.json",
    "syncEvents": [
      "fileChange",
      "codeCompletion",
      "chatInteraction",
      "analysisUpdate"
    ],
    "syncInterval": "30s"
  },
  "cursor.chat.excludeFiles": [
    "**/*.backup",
    "**/*.backup.*",
    "**/*.bak",
    "**/*.old",
    "**/*.orig",
    "**/*.tmp",
    "**/*.temp",
    "**/backup/**",
    "**/backups/**",
    "**/.cursor/settings.backup.json",
    "**/.cursor/settings.enhanced.backup.json",
    "**/.cursor/*.backup.*",
    "**/.cursor/rules/agents/_store/backups/**",
    "**/.cursor/rules/agents/_store/memory/backup/**",
    "**/.cursor/rules/agents/_store/analysis/backup/**",
    "**/.cursor/rules/agents/_store/cache/**",
    "**/.cursor/rules/agents/_store/temp/**",
    "**/.cursor/rules/agents/_store/cursor-cache/**",
    "**/node_modules/**",
    "**/.git/**",
    "**/dist/**",
    "**/build/**",
    "**/*.min.js",
    "**/*.min.css"
  ],
  "cursor.ai.excludeFromContext": [
    "**/*.backup",
    "**/*.backup.*",
    "**/*.bak",
    "**/*.old",
    "**/*.orig",
    "**/*.tmp",
    "**/*.temp",
    "**/backup/**",
    "**/backups/**",
    "**/.cursor/settings.backup.json",
    "**/.cursor/settings.enhanced.backup.json",
    "**/.cursor/*.backup.*",
    "**/.cursor/rules/agents/_store/backups/**",
    "**/.cursor/rules/agents/_store/memory/backup/**",
    "**/.cursor/rules/agents/_store/analysis/backup/**"
  ],
  "mcp": {
    "servers": {
      "aai-system-enhanced": {
        "command": "npm",
        "args": ["run", "cursor-mcp"],
        "cwd": ".cursor/rules/agents",
        "env": { 
          "STORAGE_TYPE": "sqlite",
          "SQLITE_DB_PATH": "./_store/tasks.db"
        }
      }
    },
    "defaultServer": "aai-system-enhanced"
  },
  "aai": {
    "mcp": {
      "enabled": true,
      "autoConnect": true,
      "taskManagement": {
        "autoCreate": true,
        "autoUpdate": true,
        "autoAnalyze": true,
        "autoDecompose": true,
        "autoPrioritize": true
      },
      "workflow": {
        "automation": true,
        "gitIntegration": true,
        "timeBasedTriggers": true,
        "fileEventTriggers": true
      },
      "logging": {
        "enabled": true,
        "level": "info",
        "showInOutput": true
      }
    }
  },
  "cursor.events": {
    "onFileCreate": {
      "enabled": true,
      "rules": ["MCP_TASK_MANAGEMENT_RULES.mdc#Rule1"],
      "conditions": {
        "directories": ["src/", "components/", "pages/", "api/"],
        "extensions": [".ts", ".tsx", ".js", ".jsx", ".vue", ".py"]
      }
    },
    "onFileModify": {
      "enabled": true,
      "rules": ["MCP_TASK_MANAGEMENT_RULES.mdc#Rule2"],
      "conditions": {
        "minLines": 50,
        "significantChanges": true
      }
    },
    "onFileOpen": {
      "enabled": true,
      "rules": ["WORKFLOW_AUTOMATION_RULES.mdc#Workflow10"],
      "conditions": {
        "trackWorkSessions": true,
        "updateTaskContext": true
      }
    }
  },
  "cursor.git": {
    "onBranchCreate": {
      "enabled": true,
      "rules": ["WORKFLOW_AUTOMATION_RULES.mdc#Workflow1", "WORKFLOW_AUTOMATION_RULES.mdc#Workflow2"],
      "patterns": {
        "feature": ["feature/", "feat/"],
        "bugfix": ["bug/", "fix/", "hotfix/"],
        "refactor": ["refactor/", "improve/"]
      }
    },
    "onCommit": {
      "enabled": true,
      "rules": ["WORKFLOW_AUTOMATION_RULES.mdc#Workflow6"],
      "conditions": {
        "updateProgress": true,
        "trackTime": true,
        "analyzeChanges": true
      }
    },
    "onPullRequest": {
      "enabled": true,
      "rules": ["WORKFLOW_AUTOMATION_RULES.mdc#Workflow7"],
      "conditions": {
        "createReviewTasks": true,
        "updateTaskStatus": true
      }
    }
  },
  "cursor.schedule": {
    "dailyStandup": {
      "enabled": true,
      "time": "09:00",
      "rules": ["WORKFLOW_AUTOMATION_RULES.mdc#Workflow8"],
      "actions": [
        "get_system_status",
        "list_tasks",
        "calculate_priority",
        "generateStandupReport"
      ]
    },
    "weeklyPlanning": {
      "enabled": true,
      "day": "monday",
      "time": "10:00",
      "rules": ["WORKFLOW_AUTOMATION_RULES.mdc#Workflow9"],
      "actions": [
        "get_system_status",
        "list_tasks",
        "calculate_priority",
        "generateSprintPlan"
      ]
    },
    "healthCheck": {
      "enabled": true,
      "interval": "5m",
      "rules": ["MCP_TASK_MANAGEMENT_RULES.mdc#Rule16"],
      "actions": ["get_system_status"]
    }
  },
  "mcp.tools": {
    "create_task": {
      "enabled": true,
      "autoTriggers": ["file.create", "git.branchCreate", "comment.todo"],
      "defaultArgs": {
        "priority": "medium",
        "status": "pending",
        "projectId": "${workspace.name}"
      }
    },
    "update_task": {
      "enabled": true,
      "autoTriggers": ["file.modify", "git.commit", "time.interval"],
      "defaultArgs": {
        "updatedAt": "${timestamp}"
      }
    },
    "analyze_complexity": {
      "enabled": true,
      "autoTriggers": ["file.open.large", "task.create.complex"],
      "conditions": {
        "file.lineCount": "> 200",
        "task.description.length": "> 500"
      }
    },
    "decompose_task": {
      "enabled": true,
      "autoTriggers": ["task.create.complex", "planning.session"],
      "conditions": {
        "task.complexity": "high",
        "task.estimatedHours": "> 8"
      }
    },
    "calculate_priority": {
      "enabled": true,
      "autoTriggers": ["task.create", "task.update", "time.daily"],
      "schedule": "every 4 hours"
    },
    "get_system_status": {
      "enabled": true,
      "autoTriggers": ["workspace.open", "time.daily"],
      "schedule": "every 1 hour"
    }
  },
  "mcp.performance": {
    "maxConcurrentCalls": 5,
    "requestTimeout": 30000,
    "retryAttempts": 3,
    "retryDelay": 1000,
    "batchOperations": true,
    "cacheResults": true,
    "cacheTTL": 300000
  },
  "mcp.security": {
    "allowedTools": [
      "create_task",
      "update_task", 
      "get_task",
      "list_tasks",
      "delete_task",
      "analyze_complexity",
      "decompose_task",
      "calculate_priority",
      "get_system_status"
    ],
    "requireConfirmation": ["delete_task"],
    "autoApprove": ["get_task", "list_tasks", "get_system_status"],
    "rateLimiting": {
      "enabled": true,
      "maxRequestsPerMinute": 60
    }
  },
  "commands": [
    {
      "command": "aai.createTask",
      "title": "AAI: Create Task",
      "category": "Task Management",
      "keybinding": "ctrl+shift+t"
    },
    {
      "command": "aai.updateTask",
      "title": "AAI: Update Current Task",
      "category": "Task Management",
      "keybinding": "ctrl+shift+u"
    },
    {
      "command": "aai.analyzeComplexity",
      "title": "AAI: Analyze File Complexity",
      "category": "Analysis",
      "keybinding": "ctrl+shift+a"
    },
    {
      "command": "aai.decomposeTask",
      "title": "AAI: Decompose Task",
      "category": "Planning",
      "keybinding": "ctrl+shift+d"
    },
    {
      "command": "aai.systemStatus",
      "title": "AAI: Show System Status",
      "category": "Monitoring",
      "keybinding": "ctrl+shift+s"
    }
  ],
  "statusBar": {
    "showTaskCount": true,
    "showCurrentTask": true,
    "showSystemHealth": true,
    "showMCPConnection": true,
    "refreshInterval": 30000
  },
  "sidebar": {
    "taskPanel": {
      "enabled": true,
      "position": "left",
      "showFilters": true,
      "showSearch": true,
      "autoRefresh": true
    }
  },
  "aai.mcp.enabled": true,
  "aai.taskManagement.autoCreate": true,
  "aai.taskManagement.autoUpdate": true,
  "aai.workflow.automation": true,
  "aai.workspace.path": "./.cursor/rules/agents"
}