---
description: 
globs: 
alwaysApply: false
---
# Cursor Path Fix Guide

## Overview

This guide helps AI agents systematically identify and fix broken file ps within the cursor rules project structure. All links should use the full path format with proper markdown linking syntax.

## File Structure Reference

```
.cursor/rules/
├── 00__TOOLS/
│   └── cursor_path_fix.mdc
├── 01__AI-RUN/
│   ├── 00_Getting_Started.mdc
│   ├── 01_AutoPilot.mdc
│   ├── 01_Idea.mdc
│   ├── 02_Market_Research.mdc
│   ├── 03_Core_Concept.mdc
│   ├── 04_PRD_Generation.mdc
│   ├── 05_Specs_Docs.mdc
│   ├── 06_Task_Manager.mdc
│   ├── 07_Start_Building.mdc
│   ├── 08_Testing.mdc
│   ├── 09_Deployment.mdc
│   └── Template/
│       ├── MCP-Context.mdc
│       ├── MCP-Server.json
│       └── PRD_template.mdc
├── 02__AI-DOCS/
│   ├── Documentation/
│   │   ├── AI_Coding_Agent_Optimization.mdc
│   │   ├── AI_Design_Agent_Optimization.mdc
│   │   └── AI_Task_Management_Optimization.mdc
│   ├── AI-Coder/
│   │   ├── CommonTasks/
│   │   │   └── api_endpoint_template.mdc
│   │   ├── ContextPrime/
│   │   │   └── context_prime_template.mdc
│   │   ├── TestGenerators/
│   │   │   └── test_generator_template.mdc
│   │   └── Refactoring/
│   │       └── refactoring_template.mdc
│   ├── Architecture/
│   │   └── architecture_template.mdc
│   ├── BusinessLogic/
│   │   └── business_logic_template.mdc
│   ├── Conventions/
│   │   ├── coding_conventions_template.mdc
│   │   └── design_conventions_template.mdc
│   ├── Deployment/
│   │   └── deployment_guide_template.mdc
│   ├── Integrations/
│   │   └── api_integration_template.mdc
│   └── TaskManagement/
│       ├── Roo_Task_Workflow.mdc
│       └── Tasks_JSON_Structure.mdc
├── 03__SPECS/
│   ├── features/
│   │   └── feature_spec_template.mdc
│   └── bugfixes/
│       └── bugfix_spec_template.mdc
├── tasks/
│   └── tasks.json
├── Inspiration.mdc
├── logic.mdc
├── workflow.mdc
├── README.mdc
└── project_session_state.json
```

## Link Format Standards

### Correct Format
```markdown
[filename.mdc](.cursor/rules/path/to/filename.mdc)
```

### Examples of Correct Links
- `[01_AutoPilot.mdc](.cursor/rules/01__AI-RUN/01_AutoPilot.mdc)`
- `[AI_Coding_Agent_Optimization.mdc](.cursor/rules/02__AI-DOCS/Documentation/AI_Coding_Agent_Optimization.mdc)`
- `[tasks.json](.cursor/rules/tasks/tasks.json)`

## Common Broken Link Patterns

### Pattern 1: Missing Path Prefix
```markdown
# BROKEN
[01_AutoPilot.mdc](01__AI-RUN/01_AutoPilot.mdc)

# FIXED
[01_AutoPilot.mdc](.cursor/rules/01__AI-RUN/01_AutoPilot.mdc)
```

### Pattern 2: Relative Path Only
```markdown
# BROKEN
[architecture_template.mdc](../02__AI-DOCS/Architecture/architecture_template.mdc)

# FIXED
[architecture_template.mdc](.cursor/rules/02__AI-DOCS/Architecture/architecture_template.mdc)
```

### Pattern 3: Missing File Extension
```markdown
# BROKEN
[01_AutoPilot](.cursor/rules/01__AI-RUN/01_AutoPilot)

# FIXED
[01_AutoPilot.mdc](.cursor/rules/01__AI-RUN/01_AutoPilot.mdc)
```

### Pattern 4: @ Symbol References
```markdown
# BROKEN
@`01_AutoPilot.mdc`

# FIXED
[01_AutoPilot.mdc](.cursor/rules/01__AI-RUN/01_AutoPilot.mdc)
```

## Systematic Fix Process

### Step 1: Identify Files to Check
Search for all .mdc files in the project structure that may contain links:

**Primary Files to Check:**
- All files in `01__AI-RUN/`
- All files in `02__AI-DOCS/`
- All files in `03__SPECS/`
- Root level .mdc files

### Step 2: Scan for Broken Link Patterns
Look for these patterns in each file:
1. `](` followed by paths not starting with `.cursor/rules/`
2. `@` followed by backticks and filename
3. Links without proper file extensions
4. Relative paths starting with `../`

### Step 3: Apply Fixes
For each broken link found:

1. **Identify the target file** from the reference structure above
2. **Construct the correct path** using format: `.cursor/rules/[directory]/[filename]`
3. **Replace the broken link** with the correct format

### Step 4: Validation
After fixing links, verify:
- All paths start with `.cursor/rules/`
- All referenced files exist in the structure
- Link text matches the actual filename
- Proper markdown link syntax is used

## Quick Reference Map

### 01__AI-RUN Files
- `00_Getting_Started.mdc` → `.cursor/rules/01__AI-RUN/00_Getting_Started.mdc`
- `01_AutoPilot.mdc` → `.cursor/rules/01__AI-RUN/01_AutoPilot.mdc`
- `01_Idea.mdc` → `.cursor/rules/01__AI-RUN/01_Idea.mdc`
- `02_Market_Research.mdc` → `.cursor/rules/01__AI-RUN/02_Market_Research.mdc`
- `03_Core_Concept.mdc` → `.cursor/rules/01__AI-RUN/03_Core_Concept.mdc`
- `04_PRD_Generation.mdc` → `.cursor/rules/01__AI-RUN/04_PRD_Generation.mdc`
- `05_Specs_Docs.mdc` → `.cursor/rules/01__AI-RUN/05_Specs_Docs.mdc`
- `06_Task_Manager.mdc` → `.cursor/rules/01__AI-RUN/06_Task_Manager.mdc`
- `07_Start_Building.mdc` → `.cursor/rules/01__AI-RUN/07_Start_Building.mdc`
- `08_Testing.mdc` → `.cursor/rules/01__AI-RUN/08_Testing.mdc`
- `09_Deployment.mdc` → `.cursor/rules/01__AI-RUN/09_Deployment.mdc`

### 02__AI-DOCS Files
- `AI_Coding_Agent_Optimization.mdc` → `.cursor/rules/02__AI-DOCS/Documentation/AI_Coding_Agent_Optimization.mdc`
- `AI_Design_Agent_Optimization.mdc` → `.cursor/rules/02__AI-DOCS/Documentation/AI_Design_Agent_Optimization.mdc`
- `AI_Task_Management_Optimization.mdc` → `.cursor/rules/02__AI-DOCS/Documentation/AI_Task_Management_Optimization.mdc`
- `architecture_template.mdc` → `.cursor/rules/02__AI-DOCS/Architecture/architecture_template.mdc`
- `coding_conventions_template.mdc` → `.cursor/rules/02__AI-DOCS/Conventions/coding_conventions_template.mdc`
- `design_conventions_template.mdc` → `.cursor/rules/02__AI-DOCS/Conventions/design_conventions_template.mdc`
- `Roo_Task_Workflow.mdc` → `.cursor/rules/02__AI-DOCS/TaskManagement/Roo_Task_Workflow.mdc`
- `Tasks_JSON_Structure.mdc` → `.cursor/rules/02__AI-DOCS/TaskManagement/Tasks_JSON_Structure.mdc`

### 03__SPECS Files
- `feature_spec_template.mdc` → `.cursor/rules/03__SPECS/features/feature_spec_template.mdc`
- `bugfix_spec_template.mdc` → `.cursor/rules/03__SPECS/bugfixes/bugfix_spec_template.mdc`

### Root Files
- `tasks.json` → `.cursor/rules/tasks/tasks.json`
- `Inspiration.mdc` → `.cursor/rules/Inspiration.mdc`
- `logic.mdc` → `.cursor/rules/logic.mdc`
- `workflow.mdc` → `.cursor/rules/workflow.mdc`
- `README.mdc` → `.cursor/rules/README.mdc`
- `project_session_state.json` → `.cursor/rules/project_session_state.json`

## Implementation Instructions

### For AI Agents:
1. **Load this guide** before starting any link-fixing tasks
2. **Scan each .mdc file** systematically for broken links
3. **Apply fixes** using the reference map above
4. **Validate** all links after fixing
5. **Report** summary of fixes made

### Automation Script Template:
```bash
# Find all .mdc files with potential broken links
find .cursor/rules -name "*.mdc" -exec grep -l "\](" {} \;

# Check for @ symbol references
find .cursor/rules -name "*.mdc" -exec grep -l "@\`" {} \;

# Validate fixed links
find .cursor/rules -name "*.mdc" -exec grep -l "\](.cursor/rules/" {} \;
```

## Quality Assurance

After applying fixes, ensure:
- [ ] All links use the `.cursor/rules/` prefix
- [ ] All referenced files exist in the project structure
- [ ] No broken relative paths remain
- [ ] No @ symbol references remain
- [ ] All file extensions are included
- [ ] Markdown syntax is correct

This guide ensures consistent, reliable file linking throughout the cursor rules project structure.